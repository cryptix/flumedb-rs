var N=null,E="",T="t",U="u",searchIndex={};
var R=["flumedb","flumedb::flume_log","sequence","result","error","append","latest","option","forward","backward","Examples ``` use bidir_iter::*;","readresult","offsetlog","offsetlogiter","try_from","borrow_mut","try_into","to_string","type_id","flumedb::mem_log","flumedb::offset_log","borrow","typeid","as_fail","formatter","backtrace","Attempts to downcast this `Error` to a particular `Fail`…","StreamOpts","FlumeLogError","FlumeLog","FlumeView","BidirIterator","OffsetLog","LogEntry","ReadResult","FlumeOffsetLogError","OffsetLogIter"];

searchIndex[R[0]]={"doc":R[0],"i":[[0,"flume_log",R[0],E,N,N],[3,"Error",R[1],"The `Error` type, which can contain any failure.",N,N],[3,R[27],E,E,N,N],[12,"lt",E,E,0,N],[12,"gt",E,E,0,N],[12,"reverse",E,E,0,N],[12,"live",E,E,0,N],[12,"limit",E,E,0,N],[4,R[28],E,E,N,N],[13,"SequenceNotFound",E,E,1,N],[12,R[2],"flumedb::flume_log::FlumeLogError",E,1,N],[6,"Sequence",R[1],E,N,N],[8,R[29],E,E,N,N],[10,"get",E,E,2,[[[R[2]],["self"]],[[R[3],["vec",R[4]]],["vec",["u8"]],[R[4]]]]],[10,"clear",E,E,2,[[["self"],[R[2]]]]],[10,R[6],E,E,2,[[["self"]],[[R[2]],[R[7],[R[2]]]]]],[10,R[5],E,E,2,[[["self"]],[[R[2]],[R[3],[R[2],R[4]]],[R[4]]]]],[0,"flume_view",R[0],E,N,N],[8,R[30],"flumedb::flume_view",E,N,N],[10,R[5],E,E,3,[[["self"],[R[2]]]]],[10,R[6],E,E,3,[[["self"]],[R[2]]]],[0,"mem_log",R[0],E,N,N],[3,"MemLog",R[19],E,N,N],[11,"new",E,E,4,[[],["memlog"]]],[0,"offset_log",R[0],E,N,N],[8,R[31],R[20],E,N,N],[16,"Item",E,E,5,N],[10,"next",E,E,5,[[["self"]],[R[7]]]],[10,"prev",E,R[10],5,[[["self"]],[R[7]]]],[11,R[8],E,"Create a forward-moving Iterator, starting at the current…",5,[[["self"]],[R[8]]]],[11,R[9],E,"Create a backward-moving Iterator, starting at the current…",5,[[["self"]],[R[9]]]],[11,"filter",E,R[10],5,[[["p"]],["filter"]]],[11,"map",E,R[10],5,[[["f"]],["map"]]],[11,"filter_map",E,R[10],5,[[["f"]],["filtermap"]]],[3,R[32],E,E,N,N],[12,"file",E,E,6,N],[3,"Frame",E,E,N,N],[12,"offset",E,E,7,N],[12,"data_size",E,E,7,N],[3,R[33],E,E,N,N],[12,"offset",E,E,8,N],[12,"data",E,E,8,N],[3,R[34],E,E,N,N],[12,"entry",E,E,9,N],[12,"next",E,E,9,N],[3,R[36],E,E,N,N],[4,R[35],E,E,N,N],[13,"CorruptLogFile",E,E,10,N],[13,"DecodeBufferSizeTooSmall",E,E,10,N],[5,"encode",E,E,N,[[["u64"],["bytesmut"]],[[R[3],["u64",R[4]]],["u64"],[R[4]]]]],[5,"validate_entry",E,E,N,[[["u64"],["usize"]],[[R[3],["u64",R[4]]],["u64"],[R[4]]]]],[5,"read_next",E,E,N,[[["r"],["u64"]],[[R[3],[R[11],R[4]]],[R[11]],[R[4]]]]],[5,"read_next_mut",E,E,N,[[["r"],["u64"]],[[R[3],[R[11],R[4]]],[R[11]],[R[4]]]]],[5,"read_prev",E,E,N,[[["r"],["u64"]],[[R[3],[R[11],R[4]]],[R[11]],[R[4]]]]],[5,"read_prev_mut",E,E,N,[[["r"],["u64"]],[[R[3],[R[11],R[4]]],[R[11]],[R[4]]]]],[11,"new",E,E,6,[[["path"],["asref",["path"]]],[[R[12]],[R[3],[R[12],R[4]]],[R[4]]]]],[11,"open_read_only",E,E,6,[[["path"],["asref",["path"]]],[[R[12]],[R[3],[R[12],R[4]]],[R[4]]]]],[11,"from_file",E,E,6,[[["file"]],[[R[12]],[R[3],[R[12],R[4]]],[R[4]]]]],[11,"end",E,E,6,[[["self"]],["u64"]]],[11,"read",E,E,6,[[["self"],["u64"]],[[R[3],[R[11],R[4]]],[R[11]],[R[4]]]]],[11,"append_batch",E,E,6,[[["self"]],[["vec",["u64"]],[R[3],["vec",R[4]]],[R[4]]]]],[11,"iter",E,E,6,[[["self"]],[R[13]]]],[11,"iter_at_offset",E,E,6,[[["self"],["u64"]],[R[13]]]],[11,"new",E,E,11,[[["file"]],[R[13]]]],[11,"with_starting_offset",E,E,11,[[["u64"],["file"]],[R[13]]]],[11,"from",R[1],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[17],E,E,12,[[["self"]],["string"]]],[11,R[14],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[22]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[],[R[3]]]],[11,R[23],E,E,12,[[["self"]],["fail"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[22]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[],[R[3]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],["string"]]],[11,R[14],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[22]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[],[R[3]]]],[11,R[23],E,E,1,[[["self"]],["fail"]]],[11,"from",R[19],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[14],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[22]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[],[R[3]]]],[11,"from",R[20],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[14],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[22]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[],[R[3]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[14],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[22]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[],[R[3]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[14],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[22]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[],[R[3]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[14],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[22]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[],[R[3]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[14],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[22]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[],[R[3]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],["string"]]],[11,R[14],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[22]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[],[R[3]]]],[11,R[23],E,E,10,[[["self"]],["fail"]]],[11,"fmt",R[1],E,12,[[[R[24]],["self"]],[[R[4]],[R[3],[R[4]]]]]],[11,R[23],E,E,12,[[["self"]],["fail"]]],[11,"as_ref",E,E,12,[[["self"]],["fail"]]],[11,"from",E,E,12,[[["f"]],[R[4]]]],[11,"fmt",E,E,12,[[[R[24]],["self"]],[[R[4]],[R[3],[R[4]]]]]],[11,"get",R[19],E,4,[[["self"],["u64"]],[[R[3],["vec",R[4]]],["vec",["u8"]],[R[4]]]]],[11,"clear",E,E,4,[[["self"],["u64"]]]],[11,R[6],E,E,4,[[["self"]],[[R[7],["u64"]],["u64"]]]],[11,R[5],E,E,4,[[["self"]],[[R[3],["u64",R[4]]],["u64"],[R[4]]]]],[11,"get",R[20],E,6,[[["self"],["u64"]],[[R[3],["vec",R[4]]],["vec",["u8"]],[R[4]]]]],[11,R[6],E,E,6,[[["self"]],[[R[7],["u64"]],["u64"]]]],[11,R[5],E,E,6,[[["self"]],[[R[3],["u64",R[4]]],["u64"],[R[4]]]]],[11,"clear",E,E,6,[[["self"],["u64"]]]],[11,"fmt",R[1],E,1,[[[R[24]],["self"]],[R[3]]]],[11,"fmt",R[20],E,10,[[[R[24]],["self"]],[R[3]]]],[11,"fmt",E,E,7,[[[R[24]],["self"]],[R[3]]]],[11,"fmt",E,E,8,[[[R[24]],["self"]],[R[3]]]],[11,"fmt",E,E,9,[[[R[24]],["self"]],[R[3]]]],[11,"fmt",R[1],E,1,[[["self"],[R[24]]],[R[3]]]],[11,"fmt",R[20],E,10,[[["self"],[R[24]]],[R[3]]]],[11,"next",E,E,11,[[["self"]],[R[7]]]],[11,"prev",E,E,11,[[["self"]],[R[7]]]],[11,"name",R[1],E,1,[[["self"]],[["str"],[R[7],["str"]]]]],[11,"cause",E,E,1,[[["self"]],[["fail"],[R[7],["fail"]]]]],[11,R[25],E,E,1,[[["self"]],[[R[25]],[R[7],[R[25]]]]]],[11,"name",R[20],E,10,[[["self"]],[["str"],[R[7],["str"]]]]],[11,"cause",E,E,10,[[["self"]],[["fail"],[R[7],["fail"]]]]],[11,R[25],E,E,10,[[["self"]],[[R[25]],[R[7],[R[25]]]]]],[11,"from_boxed_compat",R[1],"Creates an `Error` from `Box<std::error::Error>`.",12,[[[R[4]],["box",[R[4]]]],[R[4]]]],[11,R[23],E,"Return a reference to the underlying failure that this…",12,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",12,[[["self"]],[["str"],[R[7],["str"]]]]],[11,"cause",E,"Returns a reference to the underlying cause of this…",12,[[["self"]],["fail"]]],[11,R[25],E,"Gets a reference to the `Backtrace` for this `Error`.",12,[[["self"]],[R[25]]]],[11,"context",E,"Provides context for this `Error`.",12,[[["d"]],["context"]]],[11,"compat",E,"Wraps `Error` in a compatibility type.",12,[[],[["compat",[R[4]]],[R[4]]]]],[11,"downcast",E,R[26],12,[[],[[R[3],[R[4]]],[R[4]]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",12,[[["self"]],["fail"]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",12,[[["self"]],["causes"]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",12,[[["self"]],["causes"]]],[11,"downcast_ref",E,R[26],12,[[["self"]],[[T],[R[7]]]]],[11,"downcast_mut",E,R[26],12,[[["self"]],[[R[7]],[T]]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",12,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_causes`.",12,[[["self"]],["causes"]]]],"p":[[3,R[27]],[4,R[28]],[8,R[29]],[8,R[30]],[3,"MemLog"],[8,R[31]],[3,R[32]],[3,"Frame"],[3,R[33]],[3,R[34]],[4,R[35]],[3,R[36]],[3,"Error"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);